name: build

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: postgres:14.5
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: chat
          POSTGRES_PASSWORD: Pyh20010226
          POSTGRES_DB: chat
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Install system dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libglib2.0-dev \
            libgobject-2.0-dev \
            libgdk-pixbuf2.0-dev \
            libpango1.0-dev \
            libatk1.0-dev \
            libgtk-3-dev \
      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools-preview
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: install nextest
        uses: taiki-e/install-action@nextest
      - uses: Swatinem/rust-cache@v2
      - name: Check code format
        run: cd src-tauri && cargo fmt -- --check
      - name: Check the package for errors
        run: cd src-tauri && cargo check --all
      - name: Lint rust sources
        run: cd src-tauri && cargo clippy --all-targets --all-features --tests --benches
      - name: Execute rust tests (skip if no tests)
        run: |
          if cd src-tauri && cargo nextest list --all-features | grep -q .; then
            cd src-tauri && cargo nextest run --all-features
          else
            echo "No tests found, skipping."
          fi
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        if: startsWith(github.ref, 'refs/tags/')
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.git-cliff.outputs.content }}
